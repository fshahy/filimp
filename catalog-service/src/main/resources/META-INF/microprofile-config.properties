# Microprofile server properties
server.port=8080
server.host=0.0.0.0

# Change the following to true to enable the optional MicroProfile Metrics REST.request metrics
metrics.key-performance-indicators.extended = true
metrics.key-performance-indicators.long-running.threshold-ms = 2000
metrics.rest-request.enabled=true


#OpenTelemetry
# otel.sdk.disabled=false
# otel.traces.exporter=jaeger
# otel.service.name=helidon-tracing-service
# Application properties. This is the default greeting
app.greeting=Hello


# Datasource properties
javax.sql.DataSource.catalogds.dataSourceClassName=com.mysql.cj.jdbc.MysqlDataSource
javax.sql.DataSource.catalogds.dataSource.url=jdbc:mysql://127.0.01:6603/catalogdb?useSSL=false&allowPublicKeyRetrieval=true
javax.sql.DataSource.catalogds.dataSource.user=root
javax.sql.DataSource.catalogds.dataSource.password=root

mp.messaging:
#   incoming.from-kafka:
#     connector: helidon-kafka
#     topic: first_test
#     auto.offset.reset: latest 
#     enable.auto.commit: true
#     group.id: example-group-id

  incoming.kafka-channel:
    connector: helidon-kafka
    topic: first_test
    auto.offset.reset: latest 
    enable.auto.commit: true
    group.id: example-group-id

  outgoing.kafka-channel:
    connector: helidon-kafka
    topic: first_test

  connector:
    helidon-kafka:
      bootstrap.servers: localhost:29092 
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: org.apache.kafka.common.serialization.StringSerializer
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.apache.kafka.common.serialization.StringDeserializer